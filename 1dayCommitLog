---
2020.01.01 (wed)
* 1일 1커밋 시작
오늘부터 아무거라도 올려서 1일 1커밋 해보자.
일단 오늘은 시작 일지 만들어서 올림.

---
2020.01.02 (thu)
* 앞으로 공부해야 될 목록
1. docker
2. linux 설치후 웹프로젝트 기동
3. 하나씩 붙여보자
---
2020.01.03 (fri)
* docker 설치
1. docker
 - 설치
https://steemit.com/kr/@mystarlight/docker
https://docs.docker.com/toolbox/toolbox_install_windows/
 - 문제
 1) AMD CPU의 경우 가상화를 켰지만 docker에서 가상화를 키라고 나오고, 실행안됨.
   - 해결 : https://agiantmind.tistory.com/201
            windows defender 의 장치보안기능중 코어격리 기능 중 매모리 무결성 정책이 켜진경우
            정상독작하지 않아 해당기능을 끄면 docker가 정상동작함.
            Windows 보안 → 장치 보안 → 코어 격리 세부 정보 → 메모리 무결성 기능 끔(OFF)
 2) 위의 방법으로 가상화 켜졌는데도 해결이 안될때
  - 해결 : docker 설치 폴더의 start.sh 에 docker 설치 문에 옵션을 붙여준다.
           --virtualbox-no-vtx-check
             "${DOCKER_MACHINE}" create -d virtualbox $PROXY_ENV --virtualbox-no-vtx-check "${VM}"

                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /"""""""""""""""""\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/

docker is configured to use the default machine with IP 192.168.99.100
For help getting started, check out the docs at https://docs.docker.com


Start interactive shell

han@DESKTOP-ECMOM50 MINGW64 /d/Docker Toolbox

2. 유의점
 - 설치후 종료시 vitualbox 는 자동으로 꺼지지 않으므로 동작하는 os를 멈춰주어야 한다.
---
2020.01.04 (SAT)
* docker 실습
https://subicura.com/2017/01/19/docker-guide-for-beginners-2.html

docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]
다음은 자주 사용하는 옵션들입니다.

옵션	설명
-d	detached mode 흔히 말하는 백그라운드 모드
-p	호스트와 컨테이너의 포트를 연결 (포워딩)
-v	호스트와 컨테이너의 디렉토리를 연결 (마운트)
-e	컨테이너 내에서 사용할 환경변수 설정
–name	컨테이너 이름 설정
–rm	프로세스 종료시 컨테이너 자동 제거
-it	-i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션
–link	컨테이너 연결 [컨테이너명:별칭]

1. docker version : 버전확인

2. docker 실습
 - ubntu 실행
   docker run ubuntu:16.04
   ubuntu 를 실행한다. (다운받은 이미지가 없으면 다운후 실행)
   
   docker run --rm -it ubuntu:16.04 /bin/bash (-- rm 종료후 컨테이너 삭제, -it 키보드 입력가능, /bin/bash 배쉬명령실행)
 - redis 실습
   docker -d -p 1234:6379 redis (컨테이너는 올라가는데 접속이 안됨)

* 윈도우10 에서 telnet 설치
 - 제어판 -> 프로그램 설치 -> 윈도우 구성 -> telnet client

* docker 의 경우 윈도우에서 설치시 가상 linux를 띄우고 거기에 docker 를 띄운다.
 이미지를 없으면 다운받아 실행하고 프로세스가 없으면 종료된다.
 docker ps (실행중 이미지 목록)
 docker ps a (전체 이미지 목록)
---
2020.01.06 (MON)
* docker 공부
1. docker redis 접속이 안됨. - 해결
 - redis실행은 되었는데, telnet localhost 1234 로 접속이 안됨.
   docker tool box로 설치 되어서 그런지 잘 모르겠음.
 - 해결 : virtualbox 에 포트포워딩을 해주어야 포트가 열림
          포트열고 실행해보니 됨. 그런데 set 은 소문자로 되는데, Get 은 대문자로 해줘야 함.
          https://sukill.tistory.com/2
  *** virtualbox의 호스트는 현재 로컬을 말하고, guest는 docker process를 말한다.
      ex) docker run -p 8080:80 으로 세팅을 했을경우 host는 80 guest는 8080이다. 

2. 실행되어있는 docker 프로세스에 접속하는법
 - docker exec -i -t (docker names) //bin/bash
 - docker exec -it (docker names) /bin/bash <- 이렇게 해도 됨.

3. redis 프로세스에 접근
 - 정말 기본적인 프로그램만 설치되어 있으므로 하나하나 찾아야함.
 - /proc/1 이 redis
 - /usr/local/bin/redis-server
 - redis-cli (redis 클라이언트) ping 치면 pong이 나옴
 172.17.0.2      77081c0c81c3

---
2020.01.07 (TUE)
* docker 공부 (mysql 설치)
1. mysql 설치
 - docker run -d -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true --name mysql mysql:5.7
 - mysql -h127.0.0.1 -uroot (클라이언트 실행해서 접속)
 - show databases;
 - 일단 클라이언트가 없기 때문에 확인은 못함. (서버의 /usr/bin에 있었음)
 - (wordpress용 테이블 생성)
   mysql -h127.0.0.1 -uroot
   create database wp CHARACTER SET utf8;
   grant all privileges on wp.* to wp@'%' identified by 'wp';
   flush privileges;
   quit
 
2. wordpress
 - docker run -d -p 8080:80 --link mysql:mysql -e WORDPRESS_DB_HOST=mysql -e WORDPRESS_DB_NAME=wp -e WORDPRESS_DB_USER=wp -e WORDPRESS_DB_PASSWORD=wp wordpress
 - 웹브라우저 localhost로 실행하면 됨.

* 줄이 길경우 \ 로 나눠서 입력해도됨.

3. linux 에서 export치면 환경변수 확인가능
---
2020.01.08 (THU)
* docker 공부 (mysql tomcat 설치해서 웹프로그램 실행테스트)
1. 공부 방향
 1) docker mysql 설치
 2) docker tomcat 설치
 3) 간단한 웹프로그램 만들어서 war로 배포해서 테스트

https://m.blog.naver.com/PostView.nhn?blogId=codingspecialist&logNo=221322481487&proxyReferer=https%3A%2F%2Fwww.google.com%2F

* 위에 테스트전 스프링부트로 되어있는 developProject를 테스트 삼아 docker 빌드해서 실행해보기
https://imasoftwareengineer.tistory.com/40